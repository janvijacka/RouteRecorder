@using RouteRecorder.ViewModels
@model RouteViewModel

@{
    ViewData["Title"] = "Map";
}

<h1>Route map</h1>
<div class="row pt-2">
    <div class="col-12 col-md-3 d-flex align-items-center">
        <div>
            <p><strong>Activity:</strong> @Model.Activity</p>
            <p><strong>Date:</strong> @Model.Date</p>
            <p><strong>Person:</strong> @Model.Person</p>
            <p><strong>Distance:</strong> @Model.Distance</p>
            <p><strong>Time:</strong> @Model.Time</p>
            <p><strong>AvgSpeed:</strong> @Model.AvgSpeed km/h</p>
        </div>
    </div>
    <div class="col-11 col-md-9">
        <div id="map-container">
            <div id="map"></div>
        </div>
    </div>
    <div class="modal-footer mt-3">
        <a asp-action="Index" class="btn btn-secondary pt-2">Back</a>
    </div>
</div>

@section Scripts {
    <script src="~/leaflet/leaflet.js"></script>
    <script>
        var points = @Html.Raw(Json.Serialize(ViewBag.Points));
        var map = L.map('map').setView([points[0].latitude, points[0].longitude], 16);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        var polylinePoints = [];
        for (var i = 0; i < points.length; i++) {
            var latLng = [points[i].latitude, points[i].longitude];
            polylinePoints.push(latLng);
        }
        L.polyline(polylinePoints, { color: "blue" }).addTo(map);
    </script>
}

<link rel="stylesheet" href="~/leaflet/leaflet.css" />
<style>
    #map-container {
        height: calc(100vh - 150px); /* Adjust as needed to fit the desired height */
    }

    #map {
        height: 100%;
        width: 100%;
    }
</style>
